---
title: "Butterflies in semi-natural grasslands"
subtitle: "[NO_BFLY_001]"
format: 
  html:
    embed-resources: true
    code-fold: true
    toc: true
    toc-title: Contents
    toc-depth: 3
    smooth-scroll: true
execute: 
  cache: true
author:
  - name: Jens Åström
    email: jens.astrom@nina.no  # Enter email
    affiliations:
      - id: myID
        name: Norwegian Institute for Nature Research
  - name: Anders L. Kolstad
    affiliations:
      - ref: myID     
date: January 10, 2025 # Enter date 
callout-icon: false
lightbox: true
css: ../../../style.css
code-links:
      - text: Add a review
        icon: github
        href: https://github.com/NINAnor/ecRxiv
bibliography: references.bib
---

<!--# This is a template for how to document the indicator analyses. Make sure also to not change the order, or modify, the headers, unless you really need to. This is because it easier to read if all the indicators are presented using the same layout. If there is one header where you don't have anything to write, just leave the header as is, and don't write anything below it. If you are providing code, be careful to annotate and comment on every step in the analysis. Before starting it is recommended to fill in as much as you can in the metadata file. This file will populate the initial table in your output.-->

<!--# Load all you dependencies here -->

```{r setup}
#| include: false
library(knitr)
library(tidyverse)
library(kableExtra)
library(here)
library(bombLepiSurv)
library(tmap)
library(sf)
library(NinaR)
library(CursoRopen)
knitr::opts_chunk$set(echo = TRUE)
```

```{r source}
#| echo: false
source(here::here("_common.R"))
```

```{r}
#| echo: false
meta <- readxl::read_xlsx("../metadata.xlsx")
st <- meta |>
  filter(Variable == "status") |>
  pull(Value)
version <- meta |>
  filter(Variable == "Version") |>
  pull(Value)
auth <- meta |>
  filter(Variable == "authors") |>
  pull(Value)
year <- meta |>
  filter(Variable == "yearAdded") |>
  pull(Value)
id <- meta |>
  filter(Variable == "indicatorID") |>
  pull(Value)
name <- meta |>
  filter(Variable == "indicatorName") |>
  pull(Value)
url <- meta |>
  filter(Variable == "url") |>
  pull(Value)

meta <- meta |>
  mutate(Variable = case_match(Variable,
    "indicatorID" ~ "Indicator ID" ,
    "indicatorName" ~ "Indicator Name",
    "country" ~ "Country",
    "continent" ~ "Continent",
    "ECT" ~ "Ecosystem Condition Typology Class",
    "yearAdded" ~ "Year added",
    "yearLastUpdate" ~ "Last update",
    .default = Variable
   )
  ) |>
  filter(Variable != "authors")

```

<!--# The following parts are autogenerated. Do not edit. -->

```{r}
#| echo: false
#| results: asis
status(st)
```

::: {layout-ncol="2"}
> **Recomended citation**: `r paste(auth, " ", year, ". ", name, " (ID: ", id, ") ", "v. ", version, ". ecRxiv: ", url, sep="")`

> **Version**: `r version`
:::

```{=html}
<details>
<summary>Show metadata</summary>
```

```{r tbl-meta}
#| tbl-cap: 'Indicator metadata'
#| echo: false
#| warning: false

meta |>
  select(Variable, Value) |>
  kbl(col.names = NULL) 

```

</details>

::: {.callout-tip collapse="true"}
## Logg

<!--# Update this logg with short messages for each update -->

-   14. Dec. 2023 - [First version published](https://ninanor.github.io/ecosystemCondition/insect-indicators.html)
-   06. Jan. 2025 - Started work in ecRxive version (Kolstad)
:::

<hr />

<!--# Document you work below.  -->

## 1. Summary

```{=html}
<!--# 

With a maximum of 300 words, describe the indicator in general terms as you would to a non-expert. Think of this as a kind of commmon language summary. It is a good idea to include a bullet point list of the spesific steps in the workflow. Include a mention of the following aspects:

What does the metric represent?
Why is this relevant for describing ecosystem condition in this ecosystem?
What kind of data is used? 
Shortly, how is the data customized (modified, estimated, integarted) to fit its purpuse as an indicator?
What is the current status of  the metric (can it be used or is it still in development)?
How should the metric be used and interpretted, and how should it not be used/interpretted?

 -->
```

Butterflies are important pollinators in semi-natural grasslands, 
and are as a community dependent on a varied herbaceous flora. 
They represent a very visible aspect of biodiveristy, as well as a key functionality and indicators of habitat quality.
Butterfly community structure can become disturbed by human activities, such as intensive agriculture and land-use change, 
and is therefore a key indicator of ecosystem condition.

The indicator is based on data from the Norwegian monitoring of bumblebees and butterflies (NMBB).
This is a transect based survey using a representive grassland localities in the four regions of Norway 
(northern Norway is not included, but is expected to become included in the near future). 
The indicator is based on the number of butterflies in each locality, which is then compared to expcert elicited reference communities that show the expected number of each butterfly species.

The workflow for calculating indicator values, and for storing data, is integrated into an R-package called [bombLepiSurv](https://github.com/NINAnor/bombLepiSurv).
The indicator is fully operational and used in several national reporting settings.

## 2. About the underlying data

<!--# Describe the data you have used in more detail, it's origin, biases, availabilit ect.-->

The Norwegian monitoring of bumblebees and butterflies (NMBB) is initiated and financed by the Environmental agency, with the aim to produce continuous area representative time-series of insect community data. The NMBB program use sweep netting along transect walks where the species are identified manually in the field. <!-- More information is available in the links above. -->

NMBB is designed to be area representative, within the respective habitat types and regions. It uses stratified randomized selection of localities. Localities are slected from a predefined continuous network of survey squares, within which individual transects are then manually placed. Some subjective decisions are made in the definition of habitat criteria and in discarding unpractical survey locations.

### 2.1 Spatial and temporal resolution

<!--# Describe the temporal and spatial resolution of the data used-->

The NMBB program started in 2009 in a subset of south-eastern Norway (counties of Vestfold and Østfold), and was expanded to central Norway (Trøndelag) in 2010, south-western Norway in 2013, and to western Norway (Vestland and Møre og Romsdal fylke) in 2022. The spatial resolution aligns with these (as of now) 4 regions, and it is not recommended to downscale the predictions due to the limited number of sampling locations in each region. Since the same locations are visited each year, yearly estimates of the condition could be calculated, but should be interpreted by caution due to natural yearly variability.

Data covers 2009 up to the present.

### 2.2 Original units

<!--# What are the original units for the most relevant  variables in the data-->

Original units are number of individuals of each species within a transect, although only presences in transects (as presence frequencies) are used for the indicator calculations.

### 2.3 Additional comments about the dataset

<!--# Text here -->

This indicator was developed for the Nature Index of Norway back in 2010 [@öberg2011], and is calculated routinely on a yearly basis (see @åström2024 for the latest report).

## 3. Indicator properties

### 3.1 Ecosystem Condition Typology Class (ECT)

```{=html}
<!--# 

Describe the rationale for assigning the indicator to the ECT class. See https://oneecosystem.pensoft.net/article/58218/
This doesnt need to be very long. Maybe just a single sentence. 

-->
```

B1 - Compositional state characteristics. This indicator fits here as it describes biotic communities.

### 3.2 Ecosystem condition characteristic

```{=html}
<!--# 

Describe the ecosystem condition characteristic represented in the indicator. See 10.3897/oneeco.6.e58218 for information on what these characteristics might be.
For example, and indicator called 'Trenching in mires' could be made to represent an ecosystem characteristic 'Intact hydrology'. The term 'characteristic' is used similar to the term 'criteria' in Multiple Criteria Decition Making.  

-->
```

Intakt biotic communitites.

### 3.3 Other standards

<!--# Optional: Add text about other spesific standards, e.g. national standards, and how the indicator relates to these -->

In the Norwegian *fagsystem*, the indicator fits with the *Biologisk mangfold* characteristic.

### 3.4 Collinearities with other indicators

<!--# Describe known collinearities with other metrices (indicators or variables) that could become problematic if they were also included in the same Ecosystem Condition Assessment as the indicator described here. -->

None that are very obvious.

## 4. Reference condition and levels

### 4.1 Reference condition

<!--# Define the reference condition (or refer to where it is defined). Note the destinction between reference condition and reference levels 10.3897/oneeco.5.e58216  -->

The reference condition is meant to be one with minimal negative human impact, but this has a special interpretation for semi-natural land. These habitats are formed and maintained through human activities. Thus, “minimal negative human impact” is replaced by a state of “good maintenance”, here understood as resembling the traditional agricultural maintenance regime, existing for several hundred years up until the late 1800s. This is characterized by extensive grazing, meadows and lays, crop rotation with legumes to bind nitrogen in addition to fertilization from manure, relatively small field sizes and abundant field margins, and a lack of artificial fertilization and mechanized tilling.

### 4.2 Reference levels

```{=html}
<!--# 

If relevant (i.e. if you have normalised a variable), describe the reference levels used to normalise the variable. 

Use the terminology where X~0~ referes to the referece level (the variable value) denoting the worst possible condition; X~100~denotes the optimum or best possible condition; and X~*n*~, where in is between 0 and 100, denotes any other anchoring points linking the variable scale to the indicator scale (e.g. the threshold value between good and bad condition X~60^). 

Why was the current option chosen and how were the reference levels quantified? If the reference values are calculated as part of the analyses further down, please repeat the main information here.

 -->
```

Assessing the current state of insect communities is a complicated task, due to their taxonomic and functional breadth and high temporal and spatial variability. Still, even more challenging is establishing reference levels, when the reference states are extinct or prohibitively difficult to measure empirically.

For the butterfly indicator, the communities are small enough and well-known enough to identify reference communities by expert opinion. These reference communities specify the expected rate of observing each species. The current rates of observation are then compared to the expected rates. The calculations are further explained below.

We have not specified a value for good ecological condition (X~0~) as of yet, since we lack a straightforward empirical basis to do so. By default then, the values is set to 0.6 , following the general framework.

The indicator summarize the state of a butterfly community by estimating the difference from a reference community. 
Formally, the community indicator (CI) is expressed as the relative change of the community from a state of reference (SR), were the change is calculated by a state of change (SC). 


$$CI = \frac{SR-SC}{SR}$$
The state of reference (SR) represents a community of species which can be expected to be observed in a given habitat type and region. It is calculated by assigning each species to class of expected commonality: common (C), sporadic (S) and rare (R) species. This classification is done by expert opinion, informed by known present and past species distributions. Note that this state of reference only contains a subset of highlighted species, making up a historical reference community. Potential observations of "new" species therefore don't inform the indicator value at all. Common species are expected to be observed in at least 5 % of the surveyed transects in a habitat type and region. Sporadic species similarly are defined as having a presence below 5 % but above 1 %. Rare species are seen in no more than 1 % of the transects, and lastly, species not seen in any transect are assumed as lost (L) for the purpose of this calculation. 
  
Each commonality class gets its own weight, so that common species inform the reference state more than sporadic species, followed by rare species. The state of reference (SR) is thus a value where each species adds to the state according to its commonality. Formally, it is defined as:

$$SR = n_C * w_{C, SR} + n_S * w_{S, SR} + n_R * w_{R, SR} = \sum_{i = (C, S, R)} n_i * w_{i, SR}, $$
where $n_i$ is the number of species in a commonality class (C, S, R), and the weights $[w_{C, SR}, w_{S, SR}, w_{R, SR}]$ specify their respective contribution to the reference state (SR). The weights used are $[w_{C, SR}, w_{S, SR}, w_{R, SR}] = [1.0, 0.75, 0.50]$, i.e. a sporadic species has 75 % the weight of a common species, and a rare species has 50 % the weight of a common species. 


The state of change (SC) is calculated as
 $$SC = n_{CS} * w_{CS} + n_{CR} * w_{CR} + n_{CL} * w_{CL} + n_{SR} * w_{SR} + n_{SL} * w_{SL} + n_{RL} * w_{RL}, $$ 
where $n_{CS}$ is the number of expected common species (C) that is observed sporadically (S), and $w_{CS}$ is the weight of this change. Similarly, $n_{CR}$ is the number of expected common species that is observed rarely, $n_{RL}$ is the number of rare species that is lost, and so on. Potential increases in observation rates do not inform the indicator. Changes for common species are weighted more heavily than changes for less common species, and larger decreases are weighted more heavily than smaller decreases, such that $[w_{CS}, w_{CR}, w_{CL}, w_{SR}, w_{SL}, w_{RL}]= [0.50, 0.75, 1.00, 0.50, 0.75, 0.50]$.


#### 4.2.1 Spatial resolution and validity

```{=html}
<!--# 

Describe the spatial resolution of the reference levels. E.g. is it defined as a fixed value for all areas, or does it vary. Also, at what spatial scale are the reference levels valid? For example, if the reference levels have a regional resolution (varies between regions), it might mean that it is only valid and correct to use for normalising local variable values that are first aggregated to regional scale. However, sometimes the reference levels are insensitive to this and can be used to scale variables at the local (e.g. plot) scale. 

 -->
```
The reference levels are the unique to each region. 
They reflect the assumed *mean* community assemlage of butterflies in that region,
and therefore indicator values should not be presented at a spatial scale that is smaller than region. 
Note that there is no *variable* (in SEEA EA terms) associated with this indicator, and the indicator is normalised from the beginning and before any spatial aggregation.


## 5. Uncertainties

<!--# Describe the main uncertainties or sources of error in the indicator or the underlying data. -->

The indicator values are estimated with uncertainty, by bootstrapping the set of localities within a region, and calculating the indicator for each of 9999 such samples.
The uncertainties for indicator values are constituted by a distribution of discrete values, and therefore we only provide confidence intervals and not a standard deviation.

## 6. References

<!--# You can add references manually or use a citation manager and add intext citations as with crossreferencing and hyperlinks. See https://quarto.org/docs/authoring/footnotes-and-citations.html -->

## 7. Datasets

### 7.1 Dataset A - NMBB
<!--# Describe the unique datasets seperately under seperate headers (Dataset A, Dataset B, etc.-->
The `bombLepiSurv` package has convenience functions to fetch data from the internal NINA database. 
This database is currently not available outside NINA, but we will implement a solution for this in the future. Either we will make the database externally available, or we will provide an alternative route to the data from the GBIF export. For now, we will fetch the data through the `bombLepiSurv` functions.


<!--# Describe the main dataset, typicaly the one containing the variable of (most) interest. Change the header from Dataset A to the name of the actuall dataset. -->


### 7.2. Dataset B - Regions

<!--# Describe additional datasets in a similar was as above. Delete or add new subheaders as needed. -->
We here import a shape file with the regional delineation. The indicators associated with the NorIns project can be attributed to the 5 country regions of Norway. Currently however, the data program only covers 4 of the 5 regions.

```{r fig-regions}
#| warning: false
#| fig-cap: 'Regions in Norway'
# Import regions
regions <- sf::read_sf(here::here("indicators/NO_BFLY_001/data/regions.shp"),
  options = "ENCODING=UTF8",
  quiet = TRUE)
# import outline of Norway
nor <- sf::st_read(here::here("indicators/NO_BFLY_001/data/outlineOfNorway_EPSG25833.shp"),
  quiet = TRUE)
# remove marine areas
regions <- sf::st_intersection(regions, nor)

tm_shape(regions) + 
  tm_polygons(col = "region") 

```	


## 8. Spatial units

```{=html}
<!--# 

Describe the spatial units that you rely on in your analyses. Highlight the spatial units (the resolution) that the indicator values should be interpretted at. Potential spatial delineation data should eb introduced under 7.1. Datasets. We recomend using the SEEA EA terminology opf Basic Spatial Units (BSU), Ecosystem Asses (EA) and Ecosystem Accounting Area (EAA). 

-->
```

Ecosystem assets: Mid-, central-, east-, and southern Norway. Note that southern Norway only includes the old counties of Vestfold and Østfold. 

Ecosystem accounting area: Norway (althogh N-Norway is missing).

Data needs to be aggregated to EA level before interprettation. 
In addition, only locations with complete sampling (three replicated per season) should be included to avoids seasonal biases. 


## 9. Analyses

```{=html}
<!--# 

Use this header for documenting the analyses. Put code in seperate code chunks, and annotate the code in between using normal text (i.e. between the chunks, and try to avoid too many hashed out comments inside the code chunks). Add subheaders as needed. 

Code folding is activated, meaning the code will be hidden by default in the html (one can click to expand it).

Caching is also activated (from the top YAML), meaning that rendering to html will be quicker the second time you do it. This will create a folder inside you project folder (called INDICATORID_cache). Sometimes caching created problems because some operations are not rerun when they should be rerun. Try deleting the cash folder and try again.

-->
```

These calculations with bootstrap sampling are implemented in the R-package [bombLepiSurv](https://github.com/NINAnor/bombLepiSurv).

Install the bombLepiSurv-package like this
```{r}
#| eval: false
#| code-fold: show
remotes::install_github("NINAnor/bombLepiSurv")
library(bombLepiSurv)
```

Connect to the database, download maps and plot
```{r connect}
# get secret username and password
source(here::here("_pw.R"))
# connect
bombLepiSurv::humlesommerfConnect(
  username = BOMB_USER,
  password = BOMB_PASSWORD,
  host = "ninradardata01.nina.no"
)
```

```{r fig-butterfly-regions}	
#| fig-cap: 'Map of regions in Norway coverede by the NMBB program. Østlandet is only covered by two fylker, and northern Norway is not covered at all'
# Get maps
nbbm_norway_regions <- bombLepiSurv::get_map()

# Filer and plot
norway_reg_NBBM2 <- nbbm_norway_regions |> 
  filter(region %in% c("Sør", "Øst", "Vestlandet", "Trøndelag")) |>
  select(region) %>% 
  group_by(region) %>% 
  summarize(geom = st_union(geom))

tm_shape(norway_reg_NBBM2) + 
  tm_polygons(col = "region") 
```

Download data from 2023 as an example. 2024 data is not yet published.
```{r fig-allLepiGressmark2023}
#| fig-cap: 'Butterflies in grasslands 2023.'
allLepiGressmark2023 <- 
  getAllData(type = "butterflies", 
    habitat = "gressmark",
    year = 2023,
    language = "norsk") |>
  mutate_if(bit64::is.integer64, as.numeric)

surveyBarplot(allLepiGressmark2023)
```

Indicator data is already processed for the years 2009 to 2022 and we can get them from the R package like this: 
```{r}
# List datasets
dat <- CursoRopen::list_github_files("bombLepiSurv", path = "data/", regexp = "Gress", owner = "NINAnor")

# remove the first part of the path
dat <- str_remove(dat, "data/")
# and the second part
dat <- str_remove(dat, ".rda")

# read in all the data (as promise)
data(package = "bombLepiSurv", list = dat)

```

The indicator data is stores in the environment as one dataframe per year/region/habitat. We only look at the grassland habitat here, and not the forest habitat. 

We need to calculate the indicator values for the years 2023 (and later also 2024) and store them in the same way.

```{r calculateIndicatorValues}
#| eval: false
nIter = 999

sInd2023TrondGress <- calcInd(
  type = "Sommerfugl",    # butterflies
  region_short = "Trond", # Trøndelag region
  habitat = "Gressmark",  # Grasslands
  year = 2023,
  nIter = nIter,
  save.draws = T)

sInd2023SorGress <- calcInd(
  type = "Sommerfugl",    # butterflies
  region_short = "Sor", # South region
  habitat = "Gressmark",  # Grasslands
  year = 2023,
  nIter = nIter,
  save.draws = T)

sInd2023OstGress <- calcInd(
  type = "Sommerfugl",    # butterflies
  region_short = "Ost", # East region
  habitat = "Gressmark",  # Grasslands
  year = 2023,
  nIter = nIter,
  save.draws = T)

sInd2023VestGress <- calcInd(
  type = "Sommerfugl",    # butterflies
  region_short = "Vest", # West region
  habitat = "Gressmark",  # Grasslands
  year = 2023,
  nIter = nIter,
  save.draws = T)

save(sInd2023TrondGress, 
     sInd2023SorGress, 
     sInd2023OstGress, 
     sInd2023VestGress, 
     file = here::here("indicators", "NO_BFLY_001", "data", "sInd2023.RData"))
```

```{r}	
#| echo: false
load(here::here("indicators", "NO_BFLY_001", "data", "sInd2023.RData"))


```


Then we complie the indicator values for the years 2009 to 2023.
```{r fig-linegraph}
#| fig-cap: 'Indicator values for butterflies in grasslands from 2009 to 2022'
bGressIndVals <- collectIndData(taxa = "butterflies", 
                                habitat = "gressmark",
                                years = 2009:2023)

indPlot(input = bGressIndVals,
        confLevel = "95%",
        lineWidth = 1,
        dodge = 0.5,
        pointSize = 4) +
  scale_x_continuous(breaks = 2009:2023)
```

The data objects contain point estimates and some percentiles. 
However, in certain ecosystem accounting contexts, we may want the SD.
I belive we can get the SD from the vector of randomized draws of community indecies, like this:

```{r}
sInd2023OstGress$`Randomization draws, community` |>
  sd()
```

However, the errors or extremely skewed, and perhasp we should just use the 95% confidence interval for now.

I can get the correct 2.5 and 97.5 persentiles by using the quantile function, but I can't recreate the point estimate.
```{r}
sInd2023OstGress$`Randomization draws, community` |>
  quantile(probs = c(0.025, 0.5, 0.975))
```

This particular version of the indicator is developed for the norwegian pilot for national ecosystem condition accounting. 
In this context we need to adhere to some guidelines.
The accounting year (closing year) is 2024, and the accounting period is 3 years. 
We dont have data from 2024, but I will aggregate the data from year 2022 and 2023 to produce the value for the year 2024.
I am only concerned with the national estimate for now.
I also need to carry the errors through every calcualtion and to use an area weighted mean when aggregation spatially over regions.

First we get the area weights

```{r}
regTable <- regions |>
  filter(region != "Nord-Norge") |>
  mutate(area = st_area(geometry),
  areaWgt = area/max(area)) |>
  st_drop_geometry()
regTable
# the norwegian letters look weird in the console, but not in the environment
```

We then combine the data from 2022 and 2023

```{r}
east <- c(sInd2022OstGress$`Randomization draws, community`,
  sInd2023OstGress$`Randomization draws, community`)
vest <- c(sInd2022VestGress$`Randomization draws, community`,
  sInd2023VestGress$`Randomization draws, community`)
south <- c(sInd2022SorGress$`Randomization draws, community`,
  sInd2023SorGress$`Randomization draws, community`)
mid <- c(sInd2022TrondGress$`Randomization draws, community`,
  sInd2023TrondGress$`Randomization draws, community`)
```

And we sample from these with *n* corresponding to the area weights

```{r}
east2 <- sample(east, size = regTable |> filter(region == "Østlandet") |> pull(areaWgt)*10000, replace = T)
west2 <- sample(vest, size = regTable |> filter(region == "Vestlandet") |> pull(areaWgt)*10000, replace = T)
south2 <- sample(south, size = regTable |> filter(region == "Sørlandet") |> pull(areaWgt)*10000, replace = T)
mid2 <- sample(mid, size = regTable |> filter(region == "Midt-Norge") |> pull(areaWgt)*10000, replace = T)
```

Then we combine these into one big string and draw from it

```{r}
all <- c(east2, west2, south2, mid2)
nationalDist <- sample(all, size = 10000, replace = T)
```

The value for 2024 is then the medain of this distribution

```{r}
nationalDist |>
  quantile(probs = c(0.025, 0.5, 0.975))
```

## 10. Results

```{=html}
<!--# 

Repeat the final results here. Typically this is a map or table of indicator values.

This is typically where people will harvest data from, so make sure to include all relevant output here, but don't clutter this section with too much output either.

-->
```

|ECT|Indicator|ID|Accounting area|Closing year|Value|Error (95% CI)|
|---|---|---|---|---|---|---|
|B1|Butterflies|NO_BFLY_001|Norway|2024|0.329| (0.187 - 0.434)|

