---
title: "Pollinator Indicators"
format: 
  html:
    embed-resources: true
author:
  - name: Kwaku Peprah Adjei              # Enter name
    email: kwaku.adjei@nina.no  # Enter email
    affiliations:
      - id: myID
        name: Norwegian institute for Nature Research # Enter affiliations
  - name: Anders Kolstad              #  Enter subsequent authors like this, or remove if not relevant
    affiliations:
      - ref: myID               # To reuse affiliations referecen the id like this
  - name: Markus A.K. Sydenham              #  Enter subsequent authors like this, or remove if not relevant
    affiliations:
      - ref: myID               # To reuse affiliations referecen the id like this
date: August 19, 2024 # Enter date 
callout-icon: false
---

<!--# This is a template for how to document the indicator analyses. Make sure also to not change the order, or modify, the headers, unless you really need to. This is because it easier to read if all the indicators are presented using the same layout. If there is one header where you don't have anything to write, just leave the header as is, and don't write anything below it. If you are providing code, Be careful to annotate and comment on every step in the analysis. Before starting it is recommended to fill in as much as you can in the metadata file. This file will populate the initial table in your output.-->

<!--# Load all you dependencies here -->

```{r setup}
#| include: false
library(knitr)
library(tidyverse)
library(kableExtra)
library(here)
library(readr)
#library(raster)
#library(sf)
#library(terra)
#library(ggplot2)
library("dismo")
library("terra")
library(effects)
library(MuMIn)
library(TR8)
library(sf)
#library(intSDM)
library(dplyr)
library(inlabru)
library(PointedSDMs)
library(bipartite)
library(ggpubr)
library(purrr)
library(dplyr)
library(rgbif)
library(stringi)
library(stringr)
knitr::opts_chunk$set(echo = TRUE)
```

```{r source}
#| echo: false
source(here::here("R/_common.R"))
```

```{r}
#| echo: false
meta <- readxl::read_xlsx("../metadata.xlsx")
st <- meta |>
  filter(Variable == "status") |>
  pull(Value)
version <- meta |>
  filter(Variable == "Version") |>
  pull(Value)
auth <- meta |>
  filter(Variable == "authors") |>
  pull(Value)
year <- meta |>
  filter(Variable == "yearAdded") |>
  pull(Value)
name <- year <- meta |>
  filter(Variable == "indicatorName") |>
  pull(Value)
url <- meta |>
  filter(Variable == "url") |>
  pull(Value)

meta <- meta |>
  mutate(Variable = case_match(Variable,
    "indicatorID" ~ "Indicator ID" ,
    "indicatorName" ~ "Indicator Name",
    "country" ~ "Country",
    "continent" ~ "Continent",
    "ECT" ~ "Ecosystem Condition Typology Class",
    "yearAdded" ~ "Year added",
    "yearLastUpdate" ~ "Last update",
    .default = Variable
   )
  ) |>
  filter(Variable != "authors")

```

<!--# The following parts are autogenertaed. Do not edit. -->

::: {layout-ncol="3"}
```{r}
#| echo: false
#| results: asis
status(st)
```

::: {.callout-note style="background: cornsilk;"}
## Recomended citation

`r paste(auth, year, name, "v.", version, "ecRxiv", url, sep=" ")`
:::

::: {.callout-note style="background: khaki;"}
## Version

`r version`
:::
:::

```{r tbl-meta}
#| tbl-cap: 'Indicator metadata'
#| echo: false
#| warning: false

meta |>
  dplyr::select(Variable, Value) |>
  kbl(col.names = NULL) 

```


```{r}
#| echo: false
#| warning: false

#sapply(list.files("../data/functions/", full.names = TRUE), source)
source("../data/defineRegion.R")
newCrs <- "+proj=utm +zone=33 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=km +no_defs"
regionGeometry <- defineRegion(level = "country", region = "Norway", crs = newCrs)
```

# Pollinator indicators

<!--# Replace 'indicator name' with your the actual indicator name -->

<br />

<!--# Don't remove these three html lines -->

<br /> <br />

<hr />

<!--# Document you work below.  -->

## 1. Introduction

<!--# Describe the indicator in general terms. It is a good idea to include a bullet point list of the spesific steps in the workflow -->
We aim to model the diversity of pollinators in Norway given their know interaction
with some plant species. From the estimated diversity across the nation, we intend
to look at the estimates in the ASO Data meadows by using their values as the reference
values. To achieve this, we do the following:

* obtain data from GBIF for bumblebees, butterflies and bees

* fit an integrated species distribution model (ISDM) to the data to obtain pollinator intensities

* obtain a web plot of the pollinator and plant species

* get data on the interaction plant species from GBIF

* fit an ISDM to the plant species data to obtain the species occurrence probability

* estimate the alpha diversity index of the pollinators across Norway

![Flowchart of the modelling framework used in estimating the pollinator diversity indices. The modelling start with A) fitting ISDMs to the pollinator data, then B) fitting ISDMs to the plant data, C) constructing the web interactions between the plant and pollinators and D) estimating the alpha diversity indices. The dataset and covariates are enclosed in dashed green-colored rectangular regions. ](../img/framework.png){#fig-framework}

## 2. About the underlying data

The pollinator and plant species data used to fit the ISDMs were obtained from GBIF. **Cite the DOI of the downloaded data.** 

<!--# Describe the data you have used, it's origin, biases, avaiabilit ect.-->

### 2.1 Spatial and temporal resolution

Both pollinator and plant data obtained was for the entire Norway observed within $2005$ to $2024$. For each dataset within the downloaded GBIF data, we formatted them based on their meta data into presence-only and presence-absence data. Then, we merge all the presence-absence datasets into one dataset: mergedDatasetPA and all the presence-only datasets into one dataset: mergedDatasetPO. The number of occurrences in each dataset for the pollinators are presented in @tbl-letters.


| Dataset | Pollinator | No. of observations |
|------|------|------|
| Presence-only    | Bees    | 84485    |
|     | Butterflies    | 474857    |
|     | Hoverflies   | 79683    |
|     | TOTAL    | 639025    |
| Presence-absebce    | Bees    | 40429    |
|     | Butterflies    | 39321    |
|     | Hoverflies    | 51861    |
|     | TOTAL    | 131611    |

: Number of occurrence records for each pollinator in the merged presence-absence and presence-only datasets {#tbl-letters}

<!--# Describe the temporal and spatial resolution of the data used-->

![Distribution of 54 plant species in the merged presence-absence dataset. ](../img/plantsPA.png){#fig-plantsPA}

![Distribution of 54 plant species in the merged presence-only dataset. ](../img/plantsPO.png){#fig-plantsPO}

```{r tbl-plantOcc}
#| tbl-cap: 'Number of plant species occurrences from the merged presence-absence and presence-only datasets obtained from GBIF.'
#| echo: false
#| warning: false
plantPAocc <- read_csv("../data/plantPAocc.csv")
colnames(plantPAocc)[3] <- "Presence-absence"
#head(plantPAocc)
#colnames(plantPAocc)[2]
plantPOocc <- read_csv("../data/plantPOocc.csv")
colnames(plantPOocc)[3] <- "Presence-only"
#head(plantPOocc)
merge(plantPAocc[, 2:3],
                   plantPOocc[, 2:3],
                   by = "plant species")|>
  kbl(col.names = c("Plant species", "Presence-absence", "Presence-only")) 

```
**Iintend to keep either the table or the figures in the final document, depending on what is needed for the report.**

### 2.2 Original units

<!--# What are the original units for the most relevant  variables in the data-->

Is it presence-absence or presence only. Is it abundance or etc.

### 2.3 Additional comments about the dataset

<!--# Text here -->

## 3. Indicator properties
Anders will help with this

### 3.1. ECT

<!--# Describe the rationale for assigning the indicator to the ECT class -->


### 3.2. Ecosystem condition characteristic

<!--# Describe the ecosystem condition characteristic represneted in the indicator. See 10.3897/oneeco.6.e58218 for information on what these characteristics might be. -->

### 3.3. Other standards

<!--# Add text about other spesific standards, e.g. natinoal standards, and how the indicator relates to these -->

### 3.4. Collinearities with other indicators

<!--# Describe known collinearities with other metrices (indicators or variables) that could become problematic if they were also included in the same Ecosystem Condition Assessment as the indicator described here. -->

## 4. Reference condition and values

### 4. 1. Reference condition

<!--# Define the reference condition (or refer to where it is defined). Note the destinction between reference condition and reference values 10.3897/oneeco.5.e58216  -->

### 4. 2. Reference values

#### 4.2.1 Minimum and maximum values

```{r}
#| fig-cap: 'Reference values for diversity indices at the ASO data meadows.'
#| echo: false
#| warning: false
#| label: diversity

# load the asodata
  load("../data/asoDataMeadows.RData")
library(plotly)

axx <- list(
  title = "Annual temperature"
)

axy <- list(
  title = "Latitude"
)

axz <- list(
  title = "Diversity"
)

plot_ly(x = c(asoDataMeadows$bio1), 
        y = c(asoDataMeadows$Latitude), 
        z = c(asoDataMeadows$overallDiversity), 
        type = "scatter3d", # "scatter3d"
        mode = "markers", 
        color = c(asoDataMeadows$clusterID))%>%
  layout(scene = list(xaxis = axx, yaxis = axy, zaxis = axz))

```

```{r}
ggplot(asoDataMeadows) +
  gg(asoDataMeadows["overallDiversity"], aes(col = overallDiversity)) +
scale_fill_gradientn(colours = terrain.colors(30))+
  geom_sf(data = regionGeometry, alpha = 0.1)
```

<!--# Describe the reference values used to set the lower and upper limits on the normative indicator scale. Why was the current option chosen and how were the reference values quantified? If the reference values are calculated as part of the analyses further down, please repeat the main information here. -->

#### 4.2.2. Threshold value for defining *good ecological condition (if relevant)*

<!--# Describe the different reference values here and the justification for using these -->

#### 4.2.3. Spatial resolution and validity

<!--# Describe the spatial resolution of the reference values. E.g. is it defined as a fixed value for all areas, or does it vary. Also, at what spatial scale is the reference values valid? For example, if the reference value has a regional resolution (varies between regions), it might mean that it is only valid and correct to use for scaling local variable values that are first aggregated to regional scale. However, sometimes the reference value is insensitive to this and can be used to scale variables at the local (e.g. plot) scale.  -->

## 5. Uncertainties

<!--# Describe the main uncertainties or sources of error in the indicator or the underlying data. -->

## 6. References

<!--# You can add references manually or use a citation manager and add intext citations as with crossreferencing and hyperlinks. See https://quarto.org/docs/authoring/footnotes-and-citations.html -->

## 7. Datasets

<!--# Describe the unique datasets seperately under seperate headers (Dataset A, Dataset B, etc.-->

### 7.1 Dataset A

<!--# Describe the main dataset, typicaly the one containing the variable of (most) interest. Change the header from Dataset A to the name of the actuall dataset. -->

### 7.2. Dataset B

<!--# Describe additional datasets in a similar was as above. Deleteor add ned subheaders as needed. -->

###  7.3. Covariates

We used several covariates to fit both the pollinator and plant ISDMs. The names of the covariates, their description and source are presented in @tbl-covariate. Additionally, we include the indication of whether the covariate is a habitat, trait or climatic variables as well as which of the ISDMs it was used to fit in @tbl-covariate. 

```{r tbl-covariate}
#| tbl-cap: 'Description of covariates used to fit the integrated species distribution models and the source the covariates were retrieved from. The table indicated what type of covariate (habitat, trait and climatic) and which of the distributions it was used for (pollinator and/or plant) ISDM'
#| echo: false
#| warning: false
readxl::read_excel("../data/covariateDescription.xlsx")%>%
  kable()
```


We present the distribution of the covariates described in @tbl-covariate here in @fig-covariates.

![Covariates used to fit the ISDM.](../img/environmentalCovariates.png){#fig-covariates}

## 8. Spatial units

<!--# Describe the spatial units that you rely on in your analyses. Highlight the spatial units (the resolution) that the indicator values should be interpretted at. Potential spatial delineation data should eb introduced under 7.1. Datasets. We recomend using the SEEA EA terminology opf Basic Spatial Units (BSU), Ecosystem Asses (EA) and Ecosystem Accounting Area (EAA). -->

## 9. Analyses

<!--# Use this header for documenting the analyses. Put code in seperate code chunks, and annotate the code in between using normal text (i.e. between the chunks, and try to avoid too many hashed out comments inside the code chunks). Add subheaders as needed. -->
We fitted an ISDM using the point process framework [REF] to the merged pollinator presence-only (PO) and presence-absence (PA) datasets. ISDMs are various models that are linked together by a shared ecological process. 

Using the poisson process framework, we model the presence-only data as a Poisson point process model [REF] with mean intensity $\lambda_i(s)$ for each pollinator $i \in \{bees, butterflies, hoverflies\}$. This mean intensity is modelled as:
\begin{equation} \label{eq:int}
\ln(\lambda_i(s)) = \beta_{0i} + \beta_{ji} X_j(s) + \omega_i(s) + \eta(s),
\end{equation}
where $\beta_{0i}$ is the pollinator-specific intercept, $\beta_{ji}$ is the pollinator-specific effect of covariate $j$, $X_j(s)$ is the $j^{th}$ covariate field, $\omega_i(s)$ is the pollinator-specific spatial autocorrelation field and $\eta(s)$ is the bias field. $\omega_i(s)$  and $\eta(s)$ are modeled as zero mean Gaussian random field (i.e. $\omega_i(s) \sim N(0, \Sigma)$, where $\Sigma$ is a Mat'ern covariance matrix with variance $\sigma_{\omega}^2$ and range $\kappa$ and $\eta(s) \sim N(0, \Sigma_\eta)$, where $\Sigma_\eta$ is a Mat'ern covariance matrix with variance $\sigma_{\eta}^2$ and range $\kappa_\eta$).  

We model the PA with a logistic regression model. Let $y_i(s)$ be a binary value at location $s$ with $0$ indicating absence of pollinator $i$ and $1$ indicating presence of pollinator $i$. Then $y_i(s) \sim \text{Bernoulli}(\Psi_i(s))$ with:
$$
cloglog(\Psi_i(s)) = \beta_{0i} + \beta_{ji} X_j(s) + \omega_i(s) 
$$
where the parameters are defined in equation \ref{eq:int}.

All the ISDMs were fitted using the R-package PointedSDMs [REF].  

### 9.1. ISDM for pollinators
Using the model framework defined above, we fitted the ISDM to the pollinator dataset obtained from GBIF. 
```{r}
#| echo: true
#| warning: false
#| eval: false
model <- PointedSDMs::startSpecies(PointsBeesAndButterfliesAndHoverflies, # list of pollinator dataset (containing both mergedDatasetPA and mergedDatasetPO) 
                                   Boundary = regionGeometry, # boundary of the study
                                   Projection = newCrs, # projection
                                   Mesh = meshForProject, #mesh used for the model
                                  speciesEnvironment = TRUE, # Should we have pollinator specific covariate effect
                                  speciesIntercept = TRUE, # TRUE treats the intercept as a random effect, instead of constrained as with a fixed effect 
                                  pointsIntercept = FALSE, #should we include intercept for each dataset
                                  pointCovariates = FALSE, #do we have covariates for the presence-only data
                                   responsePA = 'individualCount', # column name of the response values for presence-absence data
                                  # trialsPA = 'trials',
                                   spatialCovariates = envCovsForModel, # raster of spatia covariates
                                   speciesName = 'Taxon', # Names of the species in the datasets
                                   pointsSpatial = NULL, # Do not include a dataset spatial field
                                   speciesSpatial = "replicate")   # unique spatial field per species, but they share the same hyperparameters.

# Add second bias field for PO data
model$addBias(datasetNames = 'mergedDatasetPO')
```

*Priors*

We assume the following priors for the pollinator ISDM:

* The probability that the standard deviation of the pollinator spatial field is greater than $0.1$ is $0.1$ (i.e. $P(\sigma_\omega > 0.1) = 0.1$).

* The probability that the standard deviation of the bias field is greater than $0.1$ is $0.1$ (i.e. $P(\sigma_\eta > 0.1) = 0.1$)

* The probability that the spatial range of the pollinator spatial field is greater than $50$ is $0.1$ (i.e $P(\kappa_\omega < 50) = 0.1$)

* The probability that the spatial range of the pollinator spatial field is greater than $50$ is $0.1$ (i.e. $P(\kappa_\eta < 50) = 0.1$)

```{r}
#| echo: true
#| warning: false
#| eval: false

# hyper parameters of the spatial field (shared across species)
model$specifySpatial(Species = TRUE,  # define same prior for the all species
                     prior.sigma = c(0.6, 0.1),  # SD of field variation; 
                     prior.range = c(5, 0.1))  # range of spatial correlation; 


model$specifySpatial(Bias = TRUE, # Change the prior
                                 prior.sigma = c(1, 0.1),
                                 prior.range = c(5, 0.1))

model$specifyRandom(
  # precision parameter on how much each species' spatial field (how much they can deviate from the shared ___)
  speciesGroup = list(model = "iid", 
                      hyper = list(prec = list(prior = "pc.prec",
                                               param = c(0.1, 0.1)))), 
  # precision parameter on the baseline species occurrence rate
  speciesIntercepts = list(prior = 'pc.prec',
                           param = c(0.1, 0.1)))  
```

*Fit model and make predictions*

We fit the model and make predictions of the pollinator intensity within the study region.
```{r}
#| echo: true
#| warning: false
#| eval: false


modelRun <- PointedSDMs::fitISDM(data = model, 
                            options = modelOptions)
  
  # predictions for this model
  individualDatasetPreds <- predict(modelRun,
          data = ppxl,
          predictor = TRUE,
          n.samples = 100)
```



### 9.2. ISDM for plant species

Modelling all the $54$ species required memoey allocations we did not have, so we split the species into groups with $10$ species in each group. We fitted independent ISDMs for each of the groups.

```{r}
#| echo: true
#| warning: false
#| eval: false

# PointedSDMs takes a longer time to fit for many species
# The trick to to break it into smaller groups
# The split will be done by the number of present speccies in each location
# I will split it nGroups time
sortedSpecies <- table(asoDatasf$acceptedScientificName)%>%
  as.data.frame()%>%
  dplyr::arrange(desc(Freq))%>%
  select(Var1)%>%
  c()

# Set the number of groups
nGroups <- 10

#split the species into groups of 10 species in each
plantSpeciesGroup <- split(sortedSpecies$Var1, 
                           seq(1, 
                               ceiling(length(sortedSpecies$Var1)/nGroups)))

```

Similar to the model the pollinator ISDM, we fitted an ISDM to the $54$ plant species. The ISDM has species-specific intercept, covariate effect and spatial field (but all the species share the same hyperparameters). We also added a spatial bias field to the observation model for the presence-only dataset. 

```{r}
#| echo: true
#| warning: false
#| eval: false


speciesModelShared <- PointedSDMs::startSpecies(formatPlantData,
                                                Boundary = regionGeometry, 
                                   Projection = newCrs, 
                                   Mesh = meshForProject,
                                   responsePA = 'individualCount',
                                   speciesEnvironment = TRUE,
                                   speciesIntercept = TRUE,
                                   spatialCovariates = envCovsForPlantSpeciesModel, 
                                   speciesName = 'simpleScientificName',
                                   pointsIntercept = FALSE,
                                   pointsSpatial = NULL, # Do not include a dataset spatial field
                                   speciesSpatial = "replicate")  

# Add bias spatial field for the PO dataset
speciesModelShared$addBias(datasetNames = 'mergedPlantsPO')


```

*Priors*
We assume the following priors for the pollinator ISDM:

* The probability that the standard deviation of the pollinator spatial field is greater than $0.1$ is $0.1$ (i.e. $P(\sigma_\omega > 0.1) = 0.1$).

* The probability that the standard deviation of the bias field is greater than $0.1$ is $0.1$ (i.e. $P(\sigma_\eta > 0.1) = 0.1$)

* The probability that the spatial range of the pollinator spatial field is greater than $50$ is $0.1$ (i.e $P(\kappa_\omega < 50) = 0.1$)

* The probability that the spatial range of the pollinator spatial field is greater than $50$ is $0.1$ (i.e. $P(\kappa_\eta < 50) = 0.1$)

```{r}
#| echo: true
#| warning: false
#| eval: false

# hyper parameters of the spatial field (shared across species)
speciesModelShared$specifySpatial(Species = TRUE,  # define same prior for the all species
                     prior.sigma = c(1, 0.1),  
                     prior.range = c(5, 0.1))  


speciesModelShared$specifySpatial(Bias = TRUE, # Change the prior
                     prior.sigma = c(0.6, 0.1),
                     prior.range = c(5, 0.1))

# prior for random effects (mesh nodes of spatial field and species intercepts)
speciesModelShared$specifyRandom(
  # precision parameter on how much each species' spatial field (how much they can deviate from the shared ___)
  speciesGroup = list(model = "iid", 
                      hyper = list(prec = list(prior = "pc.prec",
                                               param = c(0.1, 0.1)))),  
  # precision parameter on the baseline species occurrence rate
  speciesIntercepts = list(prior = 'pc.prec',
                           param = c(0.1, 0.1)))  

```

*Model fitting and predictions*
```{r}
#| echo: true
#| warning: false
#| eval: false

# specify the model options for INLA
modelOptions <- list(control.inla = list(int.strategy = 'eb', 
                                         diagonal = 0.1, 
                                         cmin = 0), 
                     verbose = FALSE, 
                     safe = TRUE)

# Species-specific spatial effects model
speciesSharedEst <- PointedSDMs::fitISDM(data = speciesModelShared, 
                            options = modelOptions)

# I proceed with the prediction of occupancy probabilities
# over the entire region
individualDatasetPreds <- predict(speciesSharedEst,
                                  data = ppxl,
                                  predictor = TRUE,
                                  n.samples = 10)
```


### 9.3 Species Interractions

```{r}
#| fig-cap: 'Webplot of plant species and pollinator interractions.'
#| echo: true
#| warning: false
#| label: webplot


  load("../data/webPlot.RData")
  #interractionMatrix <- readr::read_csv(paste0(dataFolder,"/interractionsData/interractionMatrix.csv"))
  
    bipartite::plotweb(WebReady[[1]])
```


### 9.4. Diversity Indices

To define the diversity of the pollinators, we estimate the pollinator intensity given their interaction with the plants species within the location $s$. This is estimated as:
\begin{equation}
\begin{split}
\text{Intensity for intensity} &\propto \text{Estimated pollinator intensity} \times \text{Interraction weight} \times \text{plant species occurrence probability}\\
\implies \lambda^{\star}_i(s) &= \frac{\lambda_i(s) \times w_{ik} \times \Psi_k(s)}{\sum_k \lambda_i(s) \times w_k \times \Psi_k(s)}, 
\end{split}
\end{equation}
where $w_k$ is the weight of the interaction between pollinator $i$ and plant species $k$, $\Psi_k(s)$ is the occurrence probability of plant species $k$ and $\lambda_i(s)$ is the intensity of pollinator $i$.

We estimated the Hill's diversity indices for the pollinators. The Hill's diversity indices are defined as:
$$
H(s) = r_i(s) \times log(r_i(s));
$$
where $r_i(s) = \frac{\lambda^{\star}_i(s)}{\sum_{i} \lambda^{\star}_i(s)}$.

## 10. Results

<!--# Repeat the final results here. Typically this is a map or table of indicator values.-->

### 10.1. Distribution of pollinators accross Norway

We present the predictions of log-intensity of the pollinators in @fig-pollPreds and its standard error in @fig-pollPredsSD. The log-intensity for the three pollinators: bees, butterflies and hoverflies are similar with standard error close to $0$. This result can be seen as a direct consequence of the estimates of climatic and trait variables on the pollinator distribution (@fig-pollinatorModelFixedEffects and @fig-pollinatorModelLandCover).

![Log intensity of pollinators (bees, butterfliesand hoverflies) across the study region from the fitted integrated species distribution model.](../img/PollinatorPredictions.png){#fig-pollPreds}

![Standard error of the log-intensity of pollinators (bees, butterfliesand hoverflies) across the study region from the fitted integrated species distribution model.](../img/PollinatorPredictionsSD.png){#fig-pollPredsSD}

The effects of traits and climatic variables on the pollinator distribution in @fig-pollinatorModelFixedEffects. There is a negative latitudinal effect on bees and butterflies, but a positive effect on hoverflies. However, there is a positive effect of annual temperature on butterflies and bees, but a negative effect on hoverflies. There is an insignificant trait effects on the hoverflies distribution as their credible interval of these covariates includes $0$. The contrast of this statement is true for the bees and butterflies distribution. 

![Effects of traits and climatic variables on the pollinator distribution.](../img/plantsCovariateFixedEffects.png){#fig-pollinatorModelFixedEffects}

In contrast to the trait and climatic variables, there seems to be ... (@fig-pollinatorModelLandCover).

![Plant species land cover effects.](../img/plantsCovariateLandCoverEffects.png){#fig-pollinatorModelLandCover}



![Plant species Predictions.](../img/plantSpeciesProbabilities.png){#fig-plantPreds}

![Diversity of pollinators across Norway.](../img/pollinatorDiversity.png){#fig-pollDiversity}

## 11. Export file

<!--# Display the code (don't execute it) or the workflow for exporting the indicator values to file. Ideally the indicator values are exported as a georeferenced shape or raster file with indicators values, reference values and errors. You can also chose to export the raw (un-normalised or unscaled variable) as a seperate product. You should not save large sptaial output data on GitHub. You can use eval=FALSE to avoid code from being executed (example below - delete if not relevant) -->

```{r export}
#| eval: false
```
