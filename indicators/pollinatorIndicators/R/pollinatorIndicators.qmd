---
title: "Pollinator Potential [NO_POPO_001]"
format: 
  html:
    embed-resources: true
    code-fold: true
author:
  - name: Kwaku Peprah Adjei              # Enter name
    email: kwaku.adjei@nina.no  # Enter email
    affiliations:
      - id: myID
        name: Norwegian institute for Nature Research # Enter affiliations
  - name: Anders Kolstad              #  Enter subsequent authors like this, or remove if not relevant
    affiliations:
      - ref: myID               # To reuse affiliations referecen the id like this
  - name: Markus A.K. Sydenham              #  Enter subsequent authors like this, or remove if not relevant
    affiliations:
      - ref: myID               # To reuse affiliations referecen the id like this
date: October 23, 2024 # Enter date 
bibliography: references.bib
callout-icon: false
editor_options: 
  chunk_output_type: console
---



```{r setup}
#| include: false
library(knitr)
library(tidyverse)
library(kableExtra)
library(here)
library(rvest)
library(dismo)
library(terra)
library(effects)
library(MuMIn)
library(TR8)
library(sf)
library(inlabru)
library(PointedSDMs)
library(bipartite)
library(ggpubr)
library(rgbif)
library(stringi)
knitr::opts_chunk$set(echo = TRUE)
```

```{r source}
#| echo: false
source(here::here("R/_common.R"))
```

```{r}
#| echo: false
meta <- readxl::read_xlsx("../metadata.xlsx")
st <- meta |>
  filter(Variable == "status") |>
  pull(Value)
version <- meta |>
  filter(Variable == "Version") |>
  pull(Value)
auth <- meta |>
  filter(Variable == "authors") |>
  pull(Value)
year <- meta |>
  filter(Variable == "yearAdded") |>
  pull(Value)
name <- year <- meta |>
  filter(Variable == "indicatorName") |>
  pull(Value)
url <- meta |>
  filter(Variable == "url") |>
  pull(Value)

meta <- meta |>
  mutate(Variable = case_match(Variable,
    "indicatorID" ~ "Indicator ID" ,
    "indicatorName" ~ "Indicator Name",
    "country" ~ "Country",
    "continent" ~ "Continent",
    "ECT" ~ "Ecosystem Condition Typology Class",
    "yearAdded" ~ "Year added",
    "yearLastUpdate" ~ "Last update",
    .default = Variable
   )
  ) |>
  filter(Variable != "authors")

```

<!--# The following parts are autogenertaed. Do not edit. -->

::: {layout-ncol="3"}
```{r}
#| echo: false
#| results: asis
status(st)
```

::: {.callout-note style="background: cornsilk;"}
## Recomended citation

`r paste(auth, year, name, "v.", version, "ecRxiv", url, sep=" ")`
:::

::: {.callout-note style="background: khaki;"}
## Version

`r version`
:::
:::

```{r tbl-meta}
#| tbl-cap: 'Indicator metadata'
#| echo: false
#| warning: false

meta |>
  dplyr::select(Variable, Value) |>
  kbl(col.names = NULL) 

```


```{r}
#| echo: false
#| warning: false

#sapply(list.files("../data/functions/", full.names = TRUE), source)
source("../data/defineRegion.R")
newCrs <- "+proj=utm +zone=33 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=km +no_defs"
regionGeometry <- defineRegion(level = "country", region = "Norway", crs = newCrs)
```

# Pollinator potential indicators

<!--# Replace 'indicator name' with your the actual indicator name -->

<br />

<!--# Don't remove these three html lines -->

<br /> <br />

<hr />

<!--# Document you work below.  -->

## 1. Introduction

<!--# Describe the indicator in general terms. It is a good idea to include a bullet point list of the spesific steps in the workflow -->
We aim to model the diversity of pollinators in Norway given their know interaction
with some plant species. From the estimated diversity across the nation, we intend
to look at the estimates in the ASO Data meadows by using their values as the reference
values. To achieve this, we do the following:

* a) obtain data from the Global Biodiversity Infrastructure Facility ([GBIF](www.gbif.org) ) for bumblebees, butterflies and bees.

* b) fit an integrated species distribution model (ISDM) to the data to obtain the distribution of pollinators

* c) obtain a web plot interaction matrix of the pollinator and plant species

* d) get data on the plant species within the interaction matrix from GBIF

* e) fit an ISDM data obtained in step (d) to estimate their respective species occurrence probability

* f) estimate the alpha diversity index of the pollinators across Norway using the results obtained in (b), (c) and (d).

![Flowchart of the modelling framework used in estimating the pollinator potential in this project. The modelling start with A) obtaining bees, bumblebees and hoverflies data from GBIF and fitting ISDMs to the pollinator data, then B) obtaining data on some selected plant species from GBIF and fitting ISDMs to the plant data, C) constructing the interraction between the plant and pollinators (from a given data) and D) estimating the alpha diversity indices. The covariate used to fit the ISDMs are presented in @tbl-covariate. The dataset and covariates are enclosed in dashed green-colored rectangular regions. ](../img/framework.png){#fig-framework}

## 2. About the underlying data

The pollinator [@pollinatordata] and plant species [@plantData] data used to fit the ISDMs were obtained from GBIF. The data was downloaded via the R-package **rgbif** [@rgbif], and its associated metadata was extracted using the same R-package. The downloaded GBIF data contains $26$ datasets and $30$ datasets with records on pollinators and plants respectively. We present a summary of the datasets downloaded for the pollinator and plant species respectively in @tbl-pollinatorMetaData and @tbl-plantMetaData respectively.

From the metadata, we ascertain the type of each dataset: either presence-only, presence-absence or count data. We merge all the presence-only data into one dataset (which we call `mergedDatasetPO`), but we do not merge the rest of the datasets. This is because the presence-absence data (processed from sampling event protocols) have different sampling protocols, and we would like to preserve their unique attributes. A summary of the formatted dataset used to fit the ISDMs are presented in @tbl-pollinatorOcc and @tbl-plantSpsOcc.

```{r tbl-pollinatorOcc}
#| tbl-cap: 'Number of pollinator occurrences from the formatted datasets obtained from GBIF. All presence-only datasets are merged into one dataset (mergedDataset).'
#| echo: false
#| warning: false

readr::read_csv("../data/pollinatorSummaryByDataset.csv")|>
  kbl(col.names = c("Dataset name", "No. of bees occurrences", "No. of butterflies occurrences", "No. of hoverflies occurrences"))

```


```{r tbl-plantSpsOcc}
#| tbl-cap: 'Number of plant occurrences from the formatted datasets obtained from GBIF. All presence-only datasets are merged into one dataset (mergedDataset).'
#| echo: false
#| warning: false

readr::read_csv("../data/plantSummaryByDataset.csv")|>
  kbl()

```


<!--# Describe the data you have used, it's origin, biases, avaiabilit ect.-->

### 2.1 Spatial and temporal resolution

For both pollinator and plant data obtained on a National scale (entire Norway), we used those observed within $2010$ to $2024$. We present the study region in @fig-regionGeometry.

```{r}
#| fig-cap: 'The geographic region used for this study.'
#| echo: false
#| warning: false
#| label: fig-regionGeometry

plot(regionGeometry)
```


<!--# Describe the temporal and spatial resolution of the data used-->

```{r tbl-plantOcc}
#| tbl-cap: 'Number of plant species occurrences from the merged presence-absence and presence-only datasets obtained from GBIF.'
#| echo: false
#| warning: false
#| include: false
plantPAocc <- read_csv("../data/plantPAocc.csv")
colnames(plantPAocc)[3] <- "Presence-absence"
#head(plantPAocc)
#colnames(plantPAocc)[2]
plantPOocc <- read_csv("../data/plantPOocc.csv")
colnames(plantPOocc)[3] <- "Presence-only"
#head(plantPOocc)
merge(plantPAocc[, 2:3],
                   plantPOocc[, 2:3],
                   by = "plant species")|>
  kbl(col.names = c("Plant species", "Presence-absence", "Presence-only")) 

```


### 2.2 Original units

<!--# What are the original units for the most relevant  variables in the data-->

The original unit of the each dataset obtained from GBIF for the pollinators and plants are provided in @tbl-pollinatorMetaData and @tbl-plantMetaData respectively. The dataset are either presence-only and presence-absence. 


### 2.3 Additional comments about the dataset

<!--# Text here -->

## 3. Indicator properties
Anders will help with this

### 3.1. ECT

<!--# Describe the rationale for assigning the indicator to the ECT class -->


### 3.2. Ecosystem condition characteristic

<!--# Describe the ecosystem condition characteristic represneted in the indicator. See 10.3897/oneeco.6.e58218 for information on what these characteristics might be. -->

### 3.3. Other standards

<!--# Add text about other spesific standards, e.g. natinoal standards, and how the indicator relates to these -->

### 3.4. Collinearities with other indicators

<!--# Describe known collinearities with other metrices (indicators or variables) that could become problematic if they were also included in the same Ecosystem Condition Assessment as the indicator described here. -->

## 4. Reference condition and values

### 4. 1. Reference condition

<!--# Define the reference condition (or refer to where it is defined). Note the destinction between reference condition and reference values 10.3897/oneeco.5.e58216  -->

### 4. 2. Reference values

We first estimate the richness, Shannon-Wiener and inverse Simpson diversity indices (described in @sec-divIndices) across the study region (presented in @fig-allIndices). We present the Simpson diversity estimates for the alpine, boreal and temperate pollinators with the ASO data meadows in the Appendix (@fig-alpineDiversity, @fig-borealDiversity and @fig-temperateDiversity respectively). 


```{r fig-allIndices}
#| fig-cap: 'The Shannon Weiner and inverse Simpson diversity indices for alpine, boreal, temperate and all zones estimated across Norway.'
#| fig-width: 100
#| echo: false
#| warning: false
knitr::include_graphics("../img/diversityEstimates.png")
```

#### 4.2.1 Minimum and maximum values

To define the reference values, we extract the diversity indices at the ASO locations, find the maximum and minimum values within a predefined cluster based on annual temperature and latitude. We present these reference values within each geographic cluster in @tbl-maxminvalues.

```{r}
#| echo: false
#| warning: false
#| tbl-cap: 'The maximum and minimum values of the shannon indices estimated within difference geographic clusters based on Latitude and annual temperature values.'
#| label: tbl-maxminvalues

  load("../data/asoDataMeadows.RData")
dat <- asoDataMeadows%>%
  dplyr::select(maxReference, minReference, cluster)%>%
  st_drop_geometry()%>%
  unique() %>%
  dplyr::mutate(Latitude = ifelse(cluster == 1, "Positive",
                                  ifelse(cluster == 2, "Negative",
                                         ifelse(cluster == 3, "Positive", "Negative"))),
                Temperature = ifelse(cluster == 1, "Positive",
                                  ifelse(cluster == 2, "Positive",
                                         ifelse(cluster == 3, "Negative", "Negative"))))%>%
  dplyr::select(cluster, Latitude, Temperature, minReference, maxReference) %>%
  dplyr::arrange(cluster)

rownames(dat) <- NULL

dat %>%
  kbl()
```


With these indicator values (presented in @tbl-maxminvalues), we scale the inverse Simpson diversity indices for each of the ASO meadow locations by the indicator values. We present these scaled diversity indices in @fig-asoDiversity. An increase in the inverse Simpson index reflects an increase in diversity [@zhou2002spatial].

We observed that the temperate pollinators were the most diverse followed by the boreal and temperate pollinators. 

```{r}
#| fig-cap: 'Scaled pollinator diversity indices at the meadow locations. The estimated shannon indices within each zone (alpine, boreal and temperate) are divided by the indicator values within that zone (defined in @tbl-maxminvalues).'
#| echo: false
#| warning: false
#| label: fig-asoDiversity
#| fig-width: 9
#| fig-height: 9


g1 <- ggplot(asoDataMeadows) +
  gg(asoDataMeadows["alpineReference"], aes(col = alpineReference)) +
scale_color_gradientn(colours = terrain.colors(5, rev = TRUE), 
                      breaks = seq(0, 1, 0.2), 
                      limits = c(0, 1) )+
  geom_sf(data = regionGeometry, alpha = 0.1)+
  theme_bw()+
  labs(color = " ",
       title = "a) Alpine")

g2 <- ggplot(asoDataMeadows) +
  gg(asoDataMeadows["borealReference"], aes(col = borealReference)) +
scale_color_gradientn(colours = terrain.colors(5, rev = TRUE), 
                      breaks = seq(0, 1, 0.2), 
                      limits = c(0, 1))+
  geom_sf(data = regionGeometry, alpha = 0.1)+
  theme_bw()+
  labs(color = " ",
       title = "b) Boreal")

g3 <- ggplot(asoDataMeadows) +
  gg(asoDataMeadows["temperateReference"], aes(col = temperateReference)) +
scale_color_gradientn(colours = terrain.colors(5, rev = TRUE), 
                      breaks = seq(0, 1, 0.2), 
                      limits = c(0, 1))+
  geom_sf(data = regionGeometry, alpha = 0.1)+
  theme_bw()+
  labs(color = " ",
       title = "c) Temperate")

g4 <- ggplot(asoDataMeadows) +
  gg(asoDataMeadows["allReference"], aes(col = allReference)) +
  scale_color_gradientn(colours = terrain.colors(5, rev = TRUE), 
                      breaks = seq(0, 1, 0.2), 
                      limits = c(0, 1))+
  geom_sf(data = regionGeometry, alpha = 0.1)+
  theme_bw()+
  labs(color = " ",
       title = "d) All zones")

ggarrange(g1, g2, g3, g4,
          ncol = 2, nrow = 2,
          common.legend = TRUE,
          legend = "bottom")
```


<!--# Describe the reference values used to set the lower and upper limits on the normative indicator scale. Why was the current option chosen and how were the reference values quantified? If the reference values are calculated as part of the analyses further down, please repeat the main information here. -->

#### 4.2.2. Threshold value for defining *good ecological condition (if relevant)*

We present three threshold values for defining a good condition. Any scales indicator greater than the scaled indicators (@fig-ecosystemCondition (a) are deemed to refer to `good conditions` at the location, otherwise `poor conditions`. We define three threshold values which ca be considered: 

- Threshold of 0.5 [@fig-ecosystemCondition (b)]

- Threshold of 0.6 [@fig-ecosystemCondition (c)]

- Threshold of 0.75 [@fig-ecosystemCondition (d)]

**What does this mean and how do we interpret these thresholds. Does these conditions make sense and how do we interpret those?**
```{r}
#| fig-cap: 'Shannon diversity indices at ASO data locations.'
#| echo: false
#| warning: false
#| label: fig-ecosystemCondition
#| fig-width: 9
#| fig-height: 9
  load("../data/ecosystemConditions.RData")
g1 <- ggplot(selectedVars) +
  gg(selectedVars["condition50"], aes(col = condition50)) +
scale_color_discrete( )+
  geom_sf(data = regionGeometry, alpha = 0.1)+
  theme_bw()+
  labs(color = " ",
       title = "b) Threshold: 0.50")

g2 <- ggplot(selectedVars) +
  gg(selectedVars["condition60"], aes(col = condition60)) +
scale_color_discrete( )+
  geom_sf(data = regionGeometry, alpha = 0.1)+
  theme_bw()+
  labs(color = " ",
       title = "c) Threshold: 0.60")

g3 <- ggplot(selectedVars) +
  gg(selectedVars["condition75"], aes(col = condition75)) +
scale_color_discrete( )+
  geom_sf(data = regionGeometry, alpha = 0.1)+
  theme_bw()+
  labs(color = " ",
       title = "d) Threshold: 0.75")

g4 <- ggplot(selectedVars) +
  gg(selectedVars["allReference"], aes(col = allReference)) +
  scale_color_gradientn(colours = terrain.colors(10, rev = TRUE))+
  geom_sf(data = regionGeometry, alpha = 0.1)+
  theme_bw()+
  labs(color = " ",
       title = "a) Indicator Values")

ggarrange(g4, g1, g2, g3,
          ncol = 2, nrow = 2,
          common.legend = FALSE,
          legend = "bottom")
```


<!--# Describe the different reference values here and the justification for using these -->

#### 4.2.3. Spatial resolution and validity

<!--# Describe the spatial resolution of the reference values. E.g. is it defined as a fixed value for all areas, or does it vary. Also, at what spatial scale is the reference values valid? For example, if the reference value has a regional resolution (varies between regions), it might mean that it is only valid and correct to use for scaling local variable values that are first aggregated to regional scale. However, sometimes the reference value is insensitive to this and can be used to scale variables at the local (e.g. plot) scale.  -->

## 5. Uncertainties

<!--# Describe the main uncertainties or sources of error in the indicator or the underlying data. -->

## 6. References

::: {#refs}
:::
<!--# You can add references manually or use a citation manager and add intext citations as with crossreferencing and hyperlinks. See https://quarto.org/docs/authoring/footnotes-and-citations.html -->

## 7. Datasets

Here, we describe each of the dataset used for the modelling. We refer the readers to the dataset description provided on the [GBIF](www.gbif.org) website.  

```{r tbl-dataDescription}
#| tbl-cap: 'Datasets obtained on selected plant species from GBIF, the type of dataset, total number of occurrence records in each dataset and its percentage in the total number of occurrence records. The dataset with type sampling_event is treated as presence-absence, occurrence as presence-only and insectMonitoring as count data.'
#| echo: false
#| warning: false
readxl::read_excel("../data/dataDescription.xlsx") %>%
  kbl()
```
*Here, I intend to link all the datasets to their correct version on the GBIF repository.*


### 7.1 Pollinator datasets

<!--# Describe the main dataset, typicaly the one containing the variable of (most) interest. Change the header from Dataset A to the name of the actuall dataset. -->

```{r tbl-pollinatorMetaData}
#| tbl-cap: 'Datasets obtained on pollinators from GBIF, the type of dataset, total number of occurrence records in each dataset and its percentage in the total number of occurrence records. The dataset with type sampling_event is treated as presence-absence, occurrence as presence-only and insectMonitoring as count data.'
#| echo: false
#| warning: false
readr::read_csv("../data/pollinatorMetaData.csv")|>
  kbl(col.names = c("Dataset name", "Data type", "No. of observations", "Percent")) 

```

Out of the 26 datasets obtained from GBIF, over half of the total occurrence reports for the pollinators were from the [Norwegian species Observation Service](https://www.gbif.org/dataset/b124e1e0-4755-430f-9eab-894f25a9b59c), a third of the total occurrence report were from the [National insect monitoring in Norway](https://www.gbif.org/dataset/19fe96b0-0cf3-4a2e-90a5-7c1c19ac94ee), and the other 24 datasets cover 22 percent of the total pollinator occurrences.

![Distribution of bees, butterflies and hoverfies in the merged Presence-only and National insect monitoring in Norway datasets. The merged Presence-only dataset is colored by the taxon, and the National insect monitoring dataset is colored by the presence (1) or absence (0) value. ](../img/pollinatorPlots1.png){#fig-pollinatorPOandNSOS}
<!--# Describe the unique datasets seperately under seperate headers (Dataset A, Dataset B, etc.-->

![Distribution of bees, butterflies and hoverfies caight in window traps and those collected in large-scale field experiment in power line clearings. The observations are colored by the presence (1) or absence (0) value. ](../img/pollinatorPlots2.png){#fig-pollinator2}

After processing the data, it is important that we check that there are only information on bees from the following datasets: Solitary bees collected in a large-scale field experiment in power line clearings (southeast Norway), Bumble bees collected in a large-scale field experiment in power line clearings (southeast Norway), as can be seen in @fig-pollinator2 and @fig-pollinator3.

![Distribution of bees, butterflies and hoverfies NTNU university Museum collection and large scale field experiment in Norway. The observations are colored by the presence (1) or absence (0) value. ](../img/pollinatorPlots3.png){#fig-pollinator3}

We also check that we have information on only bees and butterflies from the Bumblebees and butterflies in Norway dataset, displayed in @fig-pollinator4.

![Distribution of bees, butterflies and hoverfies in the Bumblebees and butterflies in Norway and freshwater pelagic invertebrates ecological collection from the NTNU University Museum datasets. The observations are colored by the presence (1) or absence (0) value. ](../img/pollinatorPlots4.png){#fig-pollinator4}



### 7.2. Plant datasets

From our query for datasets from GBIF, we got a total of 30 datasets which we used to fit the ISDM for the plants. Out of these occurrence records, about 86 percent of these records were from the [Norwegian species Observation Service](https://www.gbif.org/dataset/b124e1e0-4755-430f-9eab-894f25a9b59c).
<!--# Describe additional datasets in a similar was as above. Deleteor add ned subheaders as needed. -->


```{r tbl-plantMetaData}
#| tbl-cap: 'Datasets obtained on selected plant species from GBIF, the type of dataset, total number of occurrence records in each dataset and its percentage in the total number of occurrence records. The dataset with type sampling_event is treated as presence-absence, occurrence as presence-only and insectMonitoring as count data.'
#| echo: false
#| warning: false
readr::read_csv("../data/plantMetaData.csv")|>
  kbl(col.names = c("Dataset name", "Data type", "No. of observations", "Percent")) 
```


![Distribution of plant species in the merged presence-only dataset.](../img/plantsPO.png){#fig-plantSp1}

![Distribution of plant species in the ASO data. The observations are colored by the presence (1) or absence (0) value.](../img/plantsPA.png){#fig-plantASO}

###  7.3. Covariates

We used several covariates to fit both the pollinator and plant ISDMs. The names of the covariates, their description and source are presented in @tbl-covariate. Additionally, we include the indication of whether the covariate is a habitat, trait or climatic variables as well as which of the ISDMs it was used to fit in @tbl-covariate. The rasters of the covariates are on $1$ km resolution.

```{r tbl-covariate}
#| tbl-cap: 'Description of covariates used to fit the integrated species distribution models and the source the covariates were retrieved from. The table indicated what type of covariate (habitat, trait and climatic) and which of the distributions it was used for (pollinator and/or plant) ISDM'
#| echo: false
#| warning: false
readxl::read_excel("../data/covariateDescription.xlsx")%>%
  kable()
```


We present the distribution of the covariates described in @tbl-covariate here in @fig-covariates.

```{r fig-covariates}
#| fig-cap: 'Covariates used to fit the ISDM. The resolution of the covariates are on a 1 km resolution.'
#| fig-width: 100
#| echo: false
#| warning: false
knitr::include_graphics("../img/environmentalCovariates.png")
```

To ascertain the trait effect on the pollinator distribution, we randomise the triat covariates in @tbl-covariate. These randomised covariates (displayed in @fig-covariatesRandomized) are used to fit ISDMs, and compared with the ISDMs fitted with covariates in @fig-covariates .

![Randomised trait covariates used for the cross-validation to assess the trait effect on the distribution of pollinators in the study region. The resolution of the covariates are on a 1 km resolution.](../img/environmentalCovariatesRandomized.png){#fig-covariatesRandomized}

## 8. Spatial units

<!--# Describe the spatial units that you rely on in your analyses. Highlight the spatial units (the resolution) that the indicator values should be interpretted at. Potential spatial delineation data should eb introduced under 7.1. Datasets. We recomend using the SEEA EA terminology opf Basic Spatial Units (BSU), Ecosystem Asses (EA) and Ecosystem Accounting Area (EAA). -->

## 9. Analyses

<!--# Use this header for documenting the analyses. Put code in seperate code chunks, and annotate the code in between using normal text (i.e. between the chunks, and try to avoid too many hashed out comments inside the code chunks). Add subheaders as needed. -->
We fitted an ISDM using the point process framework [@illian2008statistical] to the merged pollinator presence-only (PO) and presence-absence (PA) datasets. ISDMs are various observation models that are linked together by a shared ecological process. 

### 9.1. General overview of ISDMs {#sec-isdmOverview}

In this subsection, we present an overview of the ISDMs for general understanding of this document. For further details on ISDM, refer to @isaac2020data, @Dorazio2014 and @Fithian2015. The models are described using the point process framework as described in @peprah2023point. Additionally, we present the description of these models under the assumption that we are fitting a multi-species ISDM using presence-only and presence-absence data.

We model the presence-only data as a Poisson point process model [@illian2008statistical] with mean intensity $\lambda_i(s)$ for each species $i = 1, \ldots, S$, where $S$ is the number of species. This mean intensity modelled as:
$$
\ln(\lambda_i(s)) = \beta_{0i} + \beta_{ji} X_j(s) + \omega_i(s) + \eta(s), 
$$ {#eq-int}
where $\beta_{0i}$ is the species-specific intercept, $\beta_{ji}$ is the species-specific effect of covariate $j$, $X_j(s)$ is the $j^{th}$ covariate field, $\omega_i(s)$ is the species-specific spatial autocorrelation field and $\eta(s)$ is the bias field. $\omega_i(s)$  and $\eta(s)$ are modeled as zero mean Gaussian random field (i.e. $\omega_i(s) \sim N(0, \Sigma)$, where $\Sigma$ is a Mat'ern covariance matrix with variance $\sigma_{i}^2$ and range $\kappa_i$ and $\eta(s) \sim N(0, \Sigma_\eta)$, where $\Sigma_\eta$ is a Mat'ern covariance matrix with variance $\tau^2$ and range $\kappa_\eta$). Unless otherwise stated, we will assume that all the $S$ species share the same parameters in the covariance matrix ($\Sigma$).

We model the presence-absence data with a logistic regression model. Let $y_i(s)$ be a binary value at location $s$ with $0$ indicating absence of species $i$ and $1$ indicating presence of species $i$. Then $y_i(s) \sim \text{Bernoulli}(\Psi_i(s))$ with:
$$
cloglog(\Psi_i(s)) = \beta_{0i} + \beta_{ji} X_j(s) + \omega_i(s) 
$$ {#eq-occ}
where the parameters $\beta_0$, $\beta_1$ and $\omega$ are defined in @eq-int. We are assumming in @eq-occ that the presence-absence data is not biased.

All the ISDMs were fitted using the R-package `PointedSDMs` [@mostert2023pointedsdms]. `PointedSDMs` is a wrapper around ``inlabru`` [@inlabru], which used the integrated nested Laplace approximation method (implemented in the R-package ``INLA``; @inla) to fit hierarchical models that can be expressed as linear Gaussian models. The reader is referred to @zuur2017beginner, @gomez2020bayesian, @blangiardo2015spatial for further reading.

To be able to fit the model, the study region is discretised by creating a mesh over the surface. The mesh we used in this study is presented in @fig-mesh.

```{r fig-mesh}
#| fig-cap: 'Mesh used in fitting the models with INLA.'
#| fig-width: 10
#| fig-height: 8
#| echo: false
#| warning: false
load("../data/mesh.RData")
plot(meshForProject)
```

### 9.2. ISDM for pollinators

Using the model framework defined in @sec-isdmOverview, we fitted the ISDM to the pollinator dataset obtained from GBIF. 


```{r}
#| echo: true
#| warning: false
#| eval: false

# Load data and covariates
source("pipeline/dataImport/importPollinatorFromGBIF.R")
source("pipeline/dataImport/environmentalDataImport.R")

# Set the model
model <- PointedSDMs::startSpecies(PointsBeesAndButterfliesAndHoverflies, # list of pollinator dataset (containing both mergedDatasetPA and mergedDatasetPO) 
                                   Boundary = regionGeometry, # boundary of the study
                                   Projection = newCrs, # projection
                                   Mesh = meshForProject, #mesh used for the model
                                  speciesEnvironment = TRUE, # Should we have pollinator specific covariate effect
                                  speciesIntercept = TRUE, # TRUE treats the intercept as a random effect, instead of constrained as with a fixed effect 
                                  pointsIntercept = FALSE, #should we include intercept for each dataset
                                  pointCovariates = FALSE, #do we have covariates for the presence-only data
                                   responsePA = 'individualCount', # column name of the response values for presence-absence data
                                  # trialsPA = 'trials',
                                   spatialCovariates = envCovsForModel, # raster of spatia covariates
                                   speciesName = 'Taxon', # Names of the species in the datasets
                                   pointsSpatial = NULL, # Do not include a dataset spatial field
                                   speciesSpatial = "replicate")   # unique spatial field per species, but they share the same hyperparameters.

# Add second bias field for PO data
model$addBias(datasetNames = 'mergedDatasetPO')
```

#### 9.2.1 Priors

We assume the following priors for the pollinator ISDM:

* The probability that the standard deviation of the pollinator spatial field is greater than $0.5$ is $0.1$ (i.e. $P(\sigma_\omega > 0.5) = 0.01$).

* The probability that the standard deviation of the bias field is greater than $1$ is $0.01$ (i.e. $P(\sigma_\eta > 1) = 0.01$)

* The probability that the spatial range of the pollinator spatial field is less than $1$km is $0.01$ (i.e $P(\kappa_\omega < 1) = 0.01$)

* The probability that the spatial range of the pollinator spatial field is less than $1$km is $0.1$ (i.e. $P(\kappa_\eta < 1) = 0.1$)

* effects of continuous covariates (all covariates except land cover) and the intercept for each pollinator is assumed to be from a Normal distribution with mean $0$ and precision of $0.01$ and Normal distribution with mean $0$ and precision of $2$ respectively. 

```{r}
#| echo: true
#| warning: false
#| eval: false

# hyper parameters of the spatial field (shared across species)
for(taxon in c("Bees", "Butterflies", "Hoverflies")){
  # hyper parameters of the spatial field (shared across species)
  model$specifySpatial(Species = taxon,  # define same prior for the all species
                       prior.sigma = c(0.5, 0.01),  # SD of field variation; 
                       prior.range = c(1, 0.01),  # range of spatial correlation; 
                       constr = FALSE
  )
  
  # PC prior for intercepts
  model$priorsFixed(Effect = "intercept",  # define same prior for the all species
                    Species = taxon,
                    mean.linear = 0,
                    prec.linear = 2
  )
  
  model$changeComponents(paste0("", taxon, "_bio.sq(main = ", taxon, "_bio.sq, model = ", '"', "clinear", '"', ", range = c(-10, 0))"))
  
  model$changeComponents(paste0("", taxon, "_landCover(main = ", taxon, "_landCover, model = ", '"', "factor_contrast", '"', ", hyper = list(theta = list(initial = 0, fixed = TRUE)))"))
  
}

# Prior for bias field
model$specifySpatial(Bias = 'mergedDatasetPO', # Change the prior
                     prior.sigma = c(1, 0.01),
                     prior.range = c(1, 0.01))

# prior for random effects (mesh nodes of spatial field and species intercepts)
model$specifyRandom(
  # precision parameter on how much each species' spatial field (how much they can deviate from the shared ___)
  speciesGroup = list(model = "iid", 
                      hyper = list(prec = list(initial = 0, fixed = TRUE))), # InitialValue of sigma^2 = 1/exp(1) = 0.3
  # precision parameter on the baseline species occurrence rate
  speciesIntercepts = list(initial = 0,
                           fixed = TRUE),
  
  copyBias =  list(model = "iid", 
                   hyper = list(prec = list(initial = 0, fixed = TRUE)))#list(beta = list(initial = 0, fixed = TRUE))
)  

model$changeComponents(paste0("mergedDatasetPO_biasField(main = geometry, model = mergedDatasetPO_bias_field,control.group = list(model =", '"', "iid", '"' , ", hyper = list(prec = list(initial = 0, fixed = TRUE))))"))

# Specify priors for covariate effects (continuous)
covariatesToAddEffects <- c("bio1", "bmInt", "RegCom", "mBio1", "sdBio1", "sdmInt", "Latitude", "mLat", "sdLat", "mlatInt")
#covariatesToAddEffects <- c("bio1","Latitude")
for(covs in covariatesToAddEffects){
  model$priorsFixed(Effect = covs,
                    mean.linear = 0,
                    prec.linear = 0.01)
}

```

#### 9.2.2 Fit model and make predictions

We fit the model and make predictions of the pollinator intensity within the study region. We fit the model by using the gaussian strategy of the empirical bayes integration strategy in R-package `INLA` [@inla]. 

```{r}
#| echo: true
#| warning: false
#| eval: false

modelOptions <- list(num.threads = 4,
                     control.inla = list(int.strategy = 'eb', 
                                         diagonal = 0.001, 
                                         cmin = 0, 
                                         strategy = "gaussian",
                                         control.vb= list(enable = FALSE)), 
                     verbose = FALSE, 
                     safe = TRUE, 
                     inla.mode = "experimental")

modelRun <- PointedSDMs::fitISDM(data = model, 
                            options = modelOptions)
  
  # predictions for this model
  individualDatasetPreds <- predict(modelRun,
          data = ppxl,
          predictor = TRUE,
          n.samples = 100)
```

#### 9.2.3 Pollinator ISDM validation

We perform a five-fold spatial-block cross validation to assess the trait effect on the pollinator distribution across the study region [@mostert2023pointedsdms]. We randomly divided the study region into 5 groups (as displayed in Figure ...). For each cross validation run, we randomly select a block and fit the ISDM to the data in the remaining blocks using both the "true" trait covariates (@fig-covariates) and the randomised trait covariate (@fig-covariatesRandomized). For both covariates used, we calculate the DIC score.


The model with the lowest DIC score is deemed to be the best. 



### 9.3. ISDM for plant species

There are $54$ plant species we aim to estimate their species distribution. Looking at the number of occurrence records in @tbl-plantMetaData, developing a multi-species ISDM will produce stable estimates for the species with fewer occurrence records like `Hieracium umbellatum`. However, we do not have the required memory allocations to fit all the $54$ species together, so we split the total number of species into $6$ groups, with $9$ species in each group. The splitting is done by sorting the total occurrence in each dataset and assigning the species to each group so that the highest occurrence is in the first group, the second is in the second group and the list continues. 

After splitting the data into the groups, we fit a multi-species ISDMs (described in @sec-isdmOverview) to each group. 

```{r}
#| echo: true
#| warning: false
#| eval: false

# PointedSDMs takes a longer time to fit for many species
# The trick to to break it into smaller groups
# The split will be done by the number of present speccies in each location
# I will split it nGroups time
sortedSpecies <- table(asoDatasf$acceptedScientificName)%>%
  as.data.frame()%>%
  dplyr::arrange(desc(Freq))%>%
  select(Var1)%>%
  c()

# Set the number of groups
nGroups <- 10

#split the species into groups of 10 species in each
plantSpeciesGroup <- split(sortedSpecies$Var1, 
                           seq(1, 
                               ceiling(length(sortedSpecies$Var1)/nGroups)))

```

Similar to the model the pollinator ISDM, we fitted an ISDM to the $54$ plant species. The ISDM has species-specific intercept, covariate effect and spatial field (but all the species share the same hyperparameters). We also added a spatial bias field to the observation model for the presence-only dataset. 

```{r}
#| echo: true
#| warning: false
#| eval: false


speciesModelShared <- PointedSDMs::startSpecies(formatPlantData,
                                                Boundary = regionGeometry, 
                                   Projection = newCrs, 
                                   Mesh = meshForProject,
                                   responsePA = 'individualCount',
                                   speciesEnvironment = TRUE,
                                   speciesIntercept = TRUE,
                                   spatialCovariates = envCovsForPlantSpeciesModel, 
                                   speciesName = 'simpleScientificName',
                                   pointsIntercept = FALSE,
                                   pointsSpatial = NULL, # Do not include a dataset spatial field
                                   speciesSpatial = "replicate")  

# Add bias spatial field for the PO dataset
speciesModelShared$addBias(datasetNames = 'mergedPlantsPO')


```

#### 9.3.1 Priors
We assume the following priors for the pollinator ISDM:

* The probability that the standard deviation of the pollinator spatial field is greater than $0.1$ is $0.1$ (i.e. $P(\sigma_\omega > 0.1) = 0.1$).

* The probability that the standard deviation of the bias field is greater than $0.1$ is $0.1$ (i.e. $P(\sigma_\eta > 0.1) = 0.1$)

* The probability that the spatial range of the pollinator spatial field is greater than $50$ is $0.1$ (i.e $P(\kappa_\omega < 50) = 0.1$)

* The probability that the spatial range of the pollinator spatial field is greater than $50$ is $0.1$ (i.e. $P(\kappa_\eta < 50) = 0.1$)

```{r}
#| echo: true
#| warning: false
#| eval: false

# hyper parameters of the spatial field (shared across species)
speciesModelShared$specifySpatial(Species = TRUE,  # define same prior for the all species
                     prior.sigma = c(1, 0.1),  
                     prior.range = c(5, 0.1))  


speciesModelShared$specifySpatial(Bias = TRUE, # Change the prior
                     prior.sigma = c(0.6, 0.1),
                     prior.range = c(5, 0.1))

# prior for random effects (mesh nodes of spatial field and species intercepts)
speciesModelShared$specifyRandom(
  # precision parameter on how much each species' spatial field (how much they can deviate from the shared ___)
  speciesGroup = list(model = "iid", 
                      hyper = list(prec = list(prior = "pc.prec",
                                               param = c(0.1, 0.1)))),  
  # precision parameter on the baseline species occurrence rate
  speciesIntercepts = list(prior = 'pc.prec',
                           param = c(0.1, 0.1)))  

```

#### 9.3.2 Model fitting and predictions

We fit the model by using the adaptive strategy of the composite design integration strategy in `INLA`. 
```{r}
#| echo: true
#| warning: false
#| eval: false

# specify the model options for INLA
modelOptions <- list(num.threads = 4,
                     control.inla = list(int.strategy = 'ccd', 
                                         diagonal = 0.001, 
                                         cmin = 0, 
                                         strategy = "adaptive",
                                         control.vb= list(enable = FALSE)), 
                     verbose = FALSE, 
                     safe = TRUE, 
                     inla.mode = "experimental")

# Species-specific spatial effects model
speciesSharedEst <- PointedSDMs::fitISDM(data = speciesModelShared, 
                            options = modelOptions)

# I proceed with the prediction of occupancy probabilities
# over the entire region
individualDatasetPreds <- predict(speciesSharedEst,
                                  data = ppxl,
                                  predictor = TRUE,
                                  n.samples = 500)
```


### 9.4 Species Interractions

We visualise the bipartite networks between the pollinator taxon and the plant species using data from **where?**. The networks were created using the `frame2webs` function in the R-package `bipartite` [@bipartite]. The web plot of the network is presented in @fig-webplot. 

The data available for use in this project has interaction data on only 245 out of over 8000 pollinator species modelled here. So we derive an interraction between the pollinator taxon and the plant species and use it account for the interraction.

```{r}
#| fig-cap: 'Webplot of plant species and pollinator interractions.'
#| echo: true
#| warning: false
#| label: fig-webplot


  load("../data/webPlot.RData")
  #interractionMatrix <- readr::read_csv(paste0(dataFolder,"/interractionsData/interractionMatrix.csv"))
  
    bipartite::plotweb(WebReady[[1]])
```


### 9.5. Diversity Indices {#sec-divIndices}

To define the diversity of the pollinators, we estimate the pollinator intensity given their interaction with the plants species within the location $s$. This is estimated as:
\begin{equation}
\begin{split}
\text{Intensity for intensity} &\propto \text{Estimated pollinator intensity} \times \text{Interraction weight} \times \text{plant species occurrence probability}\\
\implies \lambda^{\star}_i(s) &= 1/K \times \sum_k \frac{\lambda_i(s) \times w_{ik} \times \Psi_k(s)}{\sum_k \lambda_i(s) \times w_k \times \Psi_k(s)}, 
\end{split}
\end{equation}
where $w_k$ is the weight of the interaction between pollinator $i$ and plant species $k$, $\Psi_k(s)$ is the occurrence probability of plant species $k$ and $\lambda_i(s)$ is the intensity of pollinator $i$.

We estimated the Hill's diversity indices for the pollinators. We estimated the species richness, Shannon diversity and inverse Simposon index using the R-package `vegan` [@vegan].

## 10. Results

<!--# Repeat the final results here. Typically this is a map or table of indicator values.-->

### 10.1. Distribution of pollinators accross Norway

We present the predictions of log-intensity of the pollinators in @fig-pollPreds and its standard error in @fig-pollPredsSD. The log-intensity for the three pollinators: bees, butterflies and hoverflies are similar with standard error close to $0$. This result can be seen as a direct consequence of the estimates of climatic and trait variables on the pollinator distribution (@fig-pollinatorModelFixedEffects and @fig-pollinatorModelLandCover).

![Log intensity of pollinators (bees, butterfliesand hoverflies) across the study region from the fitted integrated species distribution model.](../img/PollinatorPredictions.png){#fig-pollPreds}

![Standard error of the log-intensity of pollinators (bees, butterfliesand hoverflies) across the study region from the fitted integrated species distribution model.](../img/PollinatorPredictionsSD.png){#fig-pollPredsSD}

The effects of traits and climatic variables on the pollinator distribution in @fig-pollinatorModelFixedEffects. There is a negative latitudinal effect on bees and butterflies, but a positive effect on hoverflies. However, there is a positive effect of annual temperature on butterflies and bees, but a negative effect on hoverflies. There is an insignificant trait effects on the hoverflies distribution as their credible interval of these covariates includes $0$. The contrast of this statement is true for the bees and butterflies distribution. 

![Effects of traits and climatic variables on the pollinator distribution.](../img/plantsCovariateFixedEffects.png){#fig-pollinatorModelFixedEffects}

In contrast to the trait and climatic variables, there seems to be ... (@fig-pollinatorModelLandCover).

![Plant species land cover effects.](../img/plantsCovariateLandCoverEffects.png){#fig-pollinatorModelLandCover}



![Plant species Predictions.](../img/plantSpeciesProbabilities.png){#fig-plantPreds}

![Diversity of pollinators across Norway.](../img/pollinatorDiversity.png){#fig-pollDiversity}

### 10.2. Pollinator indicators

```{r}
#| fig-cap: 'Simpson diversity estimates for the alpine pollinators within the ASO data meadows. The diversity indices are colored based on their clustering by annual temperature and latitude values.'
#| echo: false
#| warning: false
#| label: fig-alpineDiversity

library(plotly)

axx <- list(
  title = "Annual temperature"
)

axy <- list(
  title = "Latitude"
)

axz <- list(
  title = "Diversity"
)

fig <- plot_ly(x = c(asoDataMeadows$bio1), 
        y = c(asoDataMeadows$Latitude), 
        z = c(asoDataMeadows$alpine_simpson), 
        type = "scatter3d", # "scatter3d"
        mode = "markers", 
        color = c(asoDataMeadows$cluster),
        showlegend = F)%>%
  layout(scene = list(xaxis = axx, yaxis = axy, zaxis = axz),
         legend= list(itemsizing='constant', orientation = 'h'),
         showlegend = FALSE, 
         showscale = FALSE)

hide_legend(fig)
```


```{r}
#| fig-cap: 'Simpson diversity estimates for the boreal pollinators within the ASO data meadows. The diversity indices are colored based on their clustering by annual temperature and latitude values.'
#| echo: false
#| warning: false
#| label: fig-borealDiversity

plot_ly(x = c(asoDataMeadows$bio1), 
        y = c(asoDataMeadows$Latitude), 
        z = c(asoDataMeadows$boreal_simpson), 
        type = "scatter3d", # "scatter3d"
        mode = "markers", 
        color = c(asoDataMeadows$cluster))%>%
  layout(scene = list(xaxis = axx, yaxis = axy, zaxis = axz))

```



```{r}
#| fig-cap: 'Simpson diversity estimates for the temperate pollinators within the ASO data meadows. The diversity indices are colored based on their clustering by annual temperature and latitude values.'
#| echo: false
#| warning: false
#| label: fig-temperateDiversity

plot_ly(x = c(asoDataMeadows$bio1), 
        y = c(asoDataMeadows$Latitude), 
        z = c(asoDataMeadows$temperate_simpson), 
        type = "scatter3d", # "scatter3d"
        mode = "markers", 
        color = c(asoDataMeadows$cluster))%>%
  layout(scene = list(xaxis = axx, yaxis = axy, zaxis = axz))

```


## 11. Export file

<!--# Display the code (don't execute it) or the workflow for exporting the indicator values to file. Ideally the indicator values are exported as a georeferenced shape or raster file with indicators values, reference values and errors. You can also chose to export the raw (un-normalised or unscaled variable) as a seperate product. You should not save large sptaial output data on GitHub. You can use eval=FALSE to avoid code from being executed (example below - delete if not relevant) -->

```{r export}
#| eval: false
```


## 12. References

::: {#refs}
:::